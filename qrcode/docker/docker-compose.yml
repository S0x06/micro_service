version: '3'
  nginx:
    image: nginx:1.12-alpine
    volumes:
      - /docker/data/www/service:/var/www/service
      - /docker/data/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - 192.168.1.200:80:80
    dns:
      - "192.168.1.56"
    restart: always
  consul:
    image: progrium/consul
    ports:
      - "8500:8500"
    command: -server -bootstrap
  prometheus:
      image: prom/prometheus
      volumes:
        - /docker/data/prometheus:/etc/prometheus
      ports:
        - "9090:9090"
      restart: always
  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - back-tier
    command:
      - '-config.file=/etc/alertmanager/config.yml'
      - '-storage.path=/alertmanager'

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 8080
    networks:
      - back-tier

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./grafana/:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin

  opentracing:
      image: jaegertracing/all-in-one
      ports:
        - "16686:16686"
        - "5775/udp:5775/udp"
      restart: always
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.1.200
#      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
  mysql:
    image: mysql:5.7
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    volumes:
      - /docker/data/mysql/:/var/lib/mysql
    restart: always
  mongo:
    image: mongo:3.4.4
    ports:
      - 27017:27017
    volumes:
      - /docker/data/mongo/:/data/db
    restart: always
networks:
  cocknetwork:
    driver: bridge